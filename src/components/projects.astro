---
import SectionContainer from "@layouts/SectionContainer.astro";
import { getCollection } from "astro:content";
import Card from "./Card.astro";
import { tags } from "@utils/technologies";

const projects = await getCollection("projects");
interface Tag {
    name: string;
    icon: string;
    color: string;
}
interface Project {
    slug: string;
    data: {
        title: string;
        description: string;
        tags: Tag[];
        image: string;
        url: string;
        deployurl: string;
        order: number;
    };
}

const enrichedProjects = projects.map((project) => {
  const enrichedTags = project.data.tags
    .map((tagKey: string) => tags[tagKey as keyof typeof tags])
    .filter(Boolean); // por si hay una clave que no existe

  return {
    ...project,
    data: {
      ...project.data,
      tags: enrichedTags,
    },
  };
});
---

<SectionContainer id={Astro.props.id}>
    <h2 class="title">Proyectos</h2>

    <div class="mx-auto px-4 columns-[300px] gap-4 space-y-4">
        {
          enrichedProjects
            .sort((a, b) => a.data.order - b.data.order)
            .map((project: Project) => {
              const { slug, data } = project;
              const { title, description, tags, image, url, deployurl } = data;
              
              return (
                <div class="break-inside-avoid">
                  <Card
                    title={title}
                    description={description}
                    url={url}
                    image={image}
                    deployurl={deployurl}
                    tags={tags}
                    slug={slug}
                  />
                </div>
              );
            })
        }
      </div>
      
</SectionContainer>
    
